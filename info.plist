<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>bundleid</key>
	<string>com.github.doitian.org-protocol</string>
	<key>connections</key>
	<dict>
		<key>5928B7BA-7181-4FBD-BEC9-913B34FB0CFE</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>DE4D7414-4A42-4FB3-BCD0-D2CAD17A6CFF</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
			</dict>
		</array>
	</dict>
	<key>createdby</key>
	<string>Ian Yang</string>
	<key>description</key>
	<string>Use org-protocol</string>
	<key>disabled</key>
	<false/>
	<key>name</key>
	<string>org-protocol</string>
	<key>objects</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>escaping</key>
				<integer>127</integer>
				<key>script</key>
				<string>export EMACSCLIENT=/usr/local/bin/emacsclient

sh ./main.sh capture</string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>DE4D7414-4A42-4FB3-BCD0-D2CAD17A6CFF</string>
			<key>version</key>
			<integer>0</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>action</key>
				<integer>0</integer>
				<key>argument</key>
				<integer>0</integer>
				<key>hotkey</key>
				<integer>37</integer>
				<key>hotmod</key>
				<integer>524288</integer>
				<key>hotstring</key>
				<string>L</string>
				<key>leftcursor</key>
				<false/>
				<key>modsmode</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.trigger.hotkey</string>
			<key>uid</key>
			<string>5928B7BA-7181-4FBD-BEC9-913B34FB0CFE</string>
			<key>version</key>
			<integer>0</integer>
		</dict>
	</array>
	<key>readme</key>
	<string>### Installation

- Link the directory directly: `make link`.
- Create a package and import it: `make install`.
- Download [org-protocol.alfredworkflow](#) and import it.

### Configuration

- Set the keyboard shortcut
- Double click "Run Script", and change `EMACSCLIENT` there.
- If you don't want to install "Feedly" as a Fluid app template, double click
  "Run Script", then "open workflow folder". Update "Feedly" in
  `capture.applescript` in the folder.

### Emacs

## Emacs

-   Create an `org-capture` template using key "b", it's better to set `:immediate-finish`

        ("b" "org-protocol" entry (file+headline (concat org-directory "/inbox.org") "Bookmarks")
         "* TODO %:description\n  :PROPERTIES:\n  :CREATED: %U\n  :END:\n  %c\n\n  %i"
         :prepend t :empty-lines 1 :immediate-finish t)

-   Add `org-mac-link-grabber` into `org-modules`. 

        ;; If you have other modules in `org-modules', append these two to existing list.
        (custom-set-variables '(org-modules '(org-protocol org-mac-link-grabber)))

    or just require it

        (require 'org-mac-link-grabber)

-   Add customer link protocol in org:

        (defun org--call-process-open (path)
          "Open PATH using system open command."
          (call-process "open" nil nil nil path))

        (org-add-link-type "open" 'org--call-process-open)</string>
	<key>uidata</key>
	<dict>
		<key>5928B7BA-7181-4FBD-BEC9-913B34FB0CFE</key>
		<dict>
			<key>ypos</key>
			<real>10</real>
		</dict>
		<key>DE4D7414-4A42-4FB3-BCD0-D2CAD17A6CFF</key>
		<dict>
			<key>ypos</key>
			<real>10</real>
		</dict>
	</dict>
	<key>webaddress</key>
	<string>https://github.com/doitian/org-protocol-workflow</string>
</dict>
</plist>
